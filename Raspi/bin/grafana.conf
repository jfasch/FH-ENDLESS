# -*- python -*-

from endless.source_mock import MockSource
from endless.sink_composite import CompositeSink
from endless.sink_stdout import StdoutSink
from endless.sink_mqtt import MQTTSink
from endless import async_util

import datetime
import functools
import math

# MQTT_HOST = '127.0.0.1'
MQTT_HOST = '10.36.40.106'


def mysin(timestamp: datetime.datetime, amplitude, hz, phase_shift, vertical_shift):
    x = timestamp.timestamp()     # seconds (in float) since epoch
    return amplitude * math.sin(hz*(x+phase_shift)) + vertical_shift

SOURCES = [
    MockSource(
        name='light-fever', 
        timestamps=async_util.wallclock_timestamps(interval=datetime.timedelta(seconds=1.5)), 
        temperature=functools.partial(mysin, amplitude=1, hz=0.5, phase_shift=math.pi/2, vertical_shift=36.5),
    ),
    MockSource(
        name='sun-exploding', 
        timestamps=async_util.wallclock_timestamps(interval=datetime.timedelta(seconds=0.7)), 
        temperature=functools.partial(mysin, amplitude=20_000, hz=0.3, phase_shift=0, vertical_shift=3_000_000),
    ),
]

_cs = CompositeSink(
    sinks=(
        StdoutSink(),
        MQTTSink(host=MQTT_HOST,
                 topics={
                     'light-fever': 'light-fever',
                     'sun-exploding': 'sun-exploding',
                 }),
    ))

SINKS = [_cs]

for s in SOURCES:
    s.connect(_cs)
