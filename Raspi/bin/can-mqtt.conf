# -*- python -*-

from endless.interfaces import Inlet
from endless.component import Component, facet, receptacle
from endless.source_can import CANSource
from endless.mqtt import MQTTClient, MQTT_PublishSampleTagToTopic
from endless.tee import Tee
from endless.filter import TagFilter
from endless.hysteresis import Hysteresis
from endless.switch_stdout import StdoutSwitch
from endless.sink_stdout import StdoutSink
from endless.sample import Sample
from endless import egon

import struct
import json


# CAN_IFACE = 'can0'
CAN_IFACE = 'mein-test-can'

# MQTT_ADDR = '192.168.220.142'
MQTT_ADDR = '127.0.0.1'


can_0x33 = CANSource(
    name='CAN@0x33', 
    can_iface=CAN_IFACE, 
    can_id=0x33)
can_0x34 = CANSource(
    name='CAN@0x34', 
    can_iface=CAN_IFACE, 
    can_id=0x34)
can2humtemp = egon.CANFrameToHumidityTemperatureConverter()
tee = Tee()
stdout = StdoutSink()

can33_filter = TagFilter('CAN@0x33')
hysteresis = Hysteresis(10, 30)
humtemp2temp = egon.HumidityTemperatureToTemperatureConverter()
switch = StdoutSwitch('Hi Switch:')
mqtt = MQTTClient(host=MQTT_ADDR)
humtemp2json = egon.HumidityTemperatureToJSonConverter()
publish_by_tag = MQTT_PublishSampleTagToTopic({
     'CAN@0x33': 'can-0x33',
     'CAN@0x34': 'can-0x34',
})

COMPONENTS = (
    can_0x33,
    can_0x34,
    can2humtemp,
    tee,
    stdout,
    mqtt,
    humtemp2json,
    publish_by_tag,
)


can_0x33.outlet.connect(can2humtemp.inlet)
can_0x34.outlet.connect(can2humtemp.inlet)

can2humtemp.outlet.connect(tee.inlet)
humtemp2json.outlet.connect(publish_by_tag.inlet)
publish_by_tag.publisher.connect(mqtt.publisher)

tee.outlet.connect(humtemp2json.inlet)
tee.outlet.connect(stdout.inlet)
tee.outlet.connect(humtemp2temp.inlet)
tee.outlet.connect(can33_filter.inlet)

can33_filter.outlet.connect(humtemp2temp.inlet)
humtemp2temp.outlet.connect(hysteresis.inlet)
hysteresis.switch.connect(switch.switch)
